memberSearchIndex = [{"l":"AbstractCellComponent(LifeGame<L, F>, Position)","h":"","u":"%3Cinit%3E(com.hs2n.exercise.lifegame.model.LifeGame,com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"AbstractLifeGameField(int, int, Map<Position, ICell<L>>)","h":"","u":"%3Cinit%3E(int,int,java.util.Map)"},{"l":"AbstractLifeGameField(int, int)","h":"","u":"%3Cinit%3E(int,int)"},{"l":"AbstractLifeGameView()","h":"","u":"%3Cinit%3E()"},{"l":"addCellChangedEventHandler(BiConsumer<LifeGame<L, F>, LifeGame.CellChangeEventArgs>)","h":"","u":"addCellChangedEventHandler(java.util.function.BiConsumer)"},{"l":"addFieldChangedEventHandler(BiConsumer<LifeGame<L, F>, LifeGame.FieldChangeEventArgs>)","h":"","u":"addFieldChangedEventHandler(java.util.function.BiConsumer)"},{"l":"birth(ICell<L>, Random)","h":"","u":"birth(com.hs2n.exercise.lifegame.model.core.ICell,java.util.Random)"},{"l":"birth(ICell<MonoLife>, Random)","h":"","u":"birth(com.hs2n.exercise.lifegame.model.core.ICell,java.util.Random)"},{"l":"birth(ICell<MonoLifeWithVitality>, Random)","h":"","u":"birth(com.hs2n.exercise.lifegame.model.core.ICell,java.util.Random)"},{"l":"birth(ICell<TrilemmaLife>, Random)","h":"","u":"birth(com.hs2n.exercise.lifegame.model.core.ICell,java.util.Random)"},{"l":"birthRate(double)","h":"","u":""},{"l":"Cell()","h":"","u":"%3Cinit%3E()"},{"l":"cellSize(int)","h":"","u":""},{"l":"clone()","h":"","u":""},{"l":"compareTo(Position)","h":"","u":"compareTo(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"copyCell()","h":"","u":""},{"l":"copyLifeGameField(int, int, Map<Position, ICell<L>>)","h":"","u":"copyLifeGameField(int,int,java.util.Map)"},{"l":"copyLifeGameField(int, int, Map<Position, ICell<MonoLife>>)","h":"","u":"copyLifeGameField(int,int,java.util.Map)"},{"l":"copyLifeGameField(int, int, Map<Position, ICell<MonoLifeWithVitality>>)","h":"","u":"copyLifeGameField(int,int,java.util.Map)"},{"l":"copyLifeGameField(int, int, Map<Position, ICell<TrilemmaLife>>)","h":"","u":"copyLifeGameField(int,int,java.util.Map)"},{"l":"createCellComponent(Position)","h":"","u":"createCellComponent(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"createLifeGameField(int, int)","h":"","u":"createLifeGameField(int,int)"},{"l":"DefaultCellComponent(LifeGame<MonoLife, DefaultLifeGameField>, Position)","h":"","u":"%3Cinit%3E(com.hs2n.exercise.lifegame.model.LifeGame,com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"DefaultLifeGameField(int, int, Map<Position, ICell<MonoLife>>)","h":"","u":"%3Cinit%3E(int,int,java.util.Map)"},{"l":"DefaultLifeGameField(int, int)","h":"","u":"%3Cinit%3E(int,int)"},{"l":"DefaultLifeGameView()","h":"","u":"%3Cinit%3E()"},{"l":"disableCellAt(Position)","h":"","u":"disableCellAt(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"enableCellAt(Position)","h":"","u":"enableCellAt(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"equals(Object)","h":"","u":"equals(java.lang.Object)"},{"l":"generateLife(double, Random)","h":"","u":"generateLife(double,java.util.Random)"},{"l":"generateLife(double)","h":"","u":""},{"l":"getCalculatedGenerationSize()","h":"","u":""},{"l":"getCellAt(Position)","h":"","u":"getCellAt(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"getColumn()","h":"","u":""},{"l":"getColumnSize()","h":"","u":""},{"l":"getCount(K)","h":"","u":""},{"l":"getCurrentCellAt(Position)","h":"","u":"getCurrentCellAt(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"getGenerationIndex()","h":"","u":""},{"l":"getLife()","h":"","u":""},{"l":"getLifeInformation(ICell<L>)","h":"","u":"getLifeInformation(com.hs2n.exercise.lifegame.model.core.ICell)"},{"l":"getLifeInformation(ICell<MonoLife>)","h":"","u":"getLifeInformation(com.hs2n.exercise.lifegame.model.core.ICell)"},{"l":"getLifeInformation(ICell<MonoLifeWithVitality>)","h":"","u":"getLifeInformation(com.hs2n.exercise.lifegame.model.core.ICell)"},{"l":"getLifeInformation(ICell<TrilemmaLife>)","h":"","u":"getLifeInformation(com.hs2n.exercise.lifegame.model.core.ICell)"},{"l":"getName()","h":"","u":""},{"l":"getPosition()","h":"","u":""},{"l":"getRow()","h":"","u":""},{"l":"getRowSize()","h":"","u":""},{"l":"getStrongOpponent()","h":"","u":""},{"l":"getVitality()","h":"","u":""},{"l":"getWeakOpponent()","h":"","u":""},{"l":"hashCode()","h":"","u":""},{"l":"hasLife()","h":"","u":""},{"l":"increment(K)","h":"","u":""},{"l":"initializeCells()","h":"","u":""},{"l":"isEnableCellAt(Position)","h":"","u":"isEnableCellAt(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"isEnabledCellAt(Position)","h":"","u":"isEnabledCellAt(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"isFirstGeneration()","h":"","u":""},{"l":"isInitialState()","h":"","u":""},{"l":"launch()","h":"","u":""},{"l":"lifeGame","h":"","u":""},{"l":"LifeGame(F)","h":"","u":"%3Cinit%3E(F)"},{"l":"LifeGameLauncher()","h":"","u":"%3Cinit%3E()"},{"l":"main(String[])","h":"","u":"main(java.lang.String[])"},{"l":"MapCounter(K...)","h":"","u":"%3Cinit%3E(K...)"},{"l":"MonoLifeWithVitality()","h":"","u":"%3Cinit%3E()"},{"l":"MonoLifeWithVitality(int)","h":"","u":"%3Cinit%3E(int)"},{"l":"newLifeGame(int, int)","h":"","u":"newLifeGame(int,int)"},{"l":"next()","h":"","u":""},{"l":"NullCell()","h":"","u":"%3Cinit%3E()"},{"l":"ONE","h":"","u":""},{"l":"paintComponent(Graphics)","h":"","u":"paintComponent(java.awt.Graphics)"},{"l":"PAPER","h":"","u":""},{"l":"position","h":"","u":""},{"l":"Position(int, int)","h":"","u":"%3Cinit%3E(int,int)"},{"l":"previous()","h":"","u":""},{"l":"putLife(L)","h":"","u":""},{"l":"removeCellChangedEventHandler(BiConsumer<LifeGame<L, F>, LifeGame.CellChangeEventArgs>)","h":"","u":"removeCellChangedEventHandler(java.util.function.BiConsumer)"},{"l":"removeFieldChangedEventHandler(BiConsumer<LifeGame<L, F>, LifeGame.FieldChangeEventArgs>)","h":"","u":"removeFieldChangedEventHandler(java.util.function.BiConsumer)"},{"l":"removeLife()","h":"","u":""},{"l":"reset()","h":"","u":""},{"l":"ROCK","h":"","u":""},{"l":"rotateCellState(ICell<L>)","h":"","u":"rotateCellState(com.hs2n.exercise.lifegame.model.core.ICell)"},{"l":"rotateCellState(ICell<MonoLife>)","h":"","u":"rotateCellState(com.hs2n.exercise.lifegame.model.core.ICell)"},{"l":"rotateCellState(ICell<MonoLifeWithVitality>)","h":"","u":"rotateCellState(com.hs2n.exercise.lifegame.model.core.ICell)"},{"l":"rotateCellState(ICell<TrilemmaLife>)","h":"","u":"rotateCellState(com.hs2n.exercise.lifegame.model.core.ICell)"},{"l":"rotateCellStateAt(Position)","h":"","u":"rotateCellStateAt(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"SCISSORS","h":"","u":""},{"l":"setGenerationIndex(int)","h":"","u":""},{"l":"toggleCellAt(Position)","h":"","u":"toggleCellAt(com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"toString()","h":"","u":""},{"l":"TrilemmaCellComponent(LifeGame<TrilemmaLife, TrilemmaLifeGameField>, Position)","h":"","u":"%3Cinit%3E(com.hs2n.exercise.lifegame.model.LifeGame,com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"TrilemmaLifeGameField(int, int, Map<Position, ICell<TrilemmaLife>>)","h":"","u":"%3Cinit%3E(int,int,java.util.Map)"},{"l":"TrilemmaLifeGameField(int, int)","h":"","u":"%3Cinit%3E(int,int)"},{"l":"TrilemmaLifeGameView()","h":"","u":"%3Cinit%3E()"},{"l":"update()","h":"","u":""},{"l":"updateCell(ICell<L>, List<ICell<L>>)","h":"","u":"updateCell(com.hs2n.exercise.lifegame.model.core.ICell,java.util.List)"},{"l":"updateCell(ICell<MonoLife>, List<ICell<MonoLife>>)","h":"","u":"updateCell(com.hs2n.exercise.lifegame.model.core.ICell,java.util.List)"},{"l":"updateCell(ICell<MonoLifeWithVitality>, List<ICell<MonoLifeWithVitality>>)","h":"","u":"updateCell(com.hs2n.exercise.lifegame.model.core.ICell,java.util.List)"},{"l":"updateCell(ICell<TrilemmaLife>, List<ICell<TrilemmaLife>>)","h":"","u":"updateCell(com.hs2n.exercise.lifegame.model.core.ICell,java.util.List)"},{"l":"updateToolTipText()","h":"","u":""},{"l":"valueOf(String)","h":"","u":"valueOf(java.lang.String)"},{"l":"values()","h":"","u":""},{"l":"VITALITY_MAX","h":"","u":""},{"l":"weaken()","h":"","u":""},{"l":"WithVitalityCellComponent(LifeGame<MonoLifeWithVitality, WithVitalityLifeGameField>, Position)","h":"","u":"%3Cinit%3E(com.hs2n.exercise.lifegame.model.LifeGame,com.hs2n.exercise.lifegame.model.core.Position)"},{"l":"WithVitalityLifeGameField(int, int, Map<Position, ICell<MonoLifeWithVitality>>)","h":"","u":"%3Cinit%3E(int,int,java.util.Map)"},{"l":"WithVitalityLifeGameField(int, int)","h":"","u":"%3Cinit%3E(int,int)"},{"l":"WithVitalityLifeGameView()","h":"","u":"%3Cinit%3E()"}]